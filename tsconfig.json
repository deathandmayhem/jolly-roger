{
  "compilerOptions": {
    /* Basic Options */
    "target": "es2019",
    "module": "esNext",
    "lib": ["esnext", "dom"],
    "jsx": "preserve",
    "noEmit": true,

    /* Strict Type-Checking Options */
    "strict": true,
    "strictNullChecks": true,
    "strictBindCallApply": true,
    "strictFunctionTypes": true,
    "strictPropertyInitialization": true,
    "noImplicitAny": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    "noImplicitThis": true,
    "noUncheckedIndexedAccess": true,

    /* Module Resolution Options */
    "baseUrl": ".",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "types": ["node", "mocha"],
    "esModuleInterop": true,
    "preserveSymlinks": true,
    "paths": {
      "meteor/*": [
        "node_modules/@types/meteor/*"
        /*
        Ideally, we'd use first-party types exported from Meteor upstream.
        Unfortunately, Meteor upstream has yet to ship a sufficiently-correct
        set of type definitions that we can use them.  Since zodern:types puts
        all the decls in a single entrypoint, we cannot take only the correct
        ones without pulling in the incorrect ones, or without getting
        duplicate declarations.  So we leave this disabled for now.
        ".meteor/local/types/packages.d.ts"
        */
      ]
    }
  },
  "exclude": [
    "./.meteor/local/build/**",
    "./.meteor/local/bundler-cache/**",
    "./packages/**",
    "./eslint/**",
    "./extension/**"
  ]
}
