name: Build and test Docker image

# Run builds on main commits and when PRs are opened or updated
on:
  push:
    branches:
    - main
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TEST_TAG: ${{ github.repository }}:test

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true # make buildx the default
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        flavor: |
          latest=${{ github.ref == 'refs/heads/main' }}
    - name: Log in to the Container registry
      uses: docker/login-action@v1
      if: github.ref == 'refs/heads/main'
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build test environment Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        target: test
        tags: ${{ env.TEST_TAG }}
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max # mode=max means cache intermediate images
        build-args: |
          GIT_REVISION=${{ github.sha }}
          CI=true
          GITHUB_ACTIONS=true
    - name: Run tests
      run: |
        docker run -e PATH_PREFIX=${{ github.workspace }} -e CI=true -e GITHUB_ACTIONS=true --rm ${{ env.TEST_TAG }}
    - name: Build production Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: ${{ github.ref == 'refs/heads/main' }} # only push on main builds
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max # mode=max means cache intermediate images
        build-args: |
          GIT_REVISION=${{ github.sha }}
          CI=true
          GITHUB_ACTIONS=true
